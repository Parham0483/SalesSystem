{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n// Add this enhanced debugging to your api.js\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  } else {}\n  return config;\n}, error => Promise.reject(error));\nAPI.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      const refreshResponse = await axios.post(`${process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/'}auth/token/refresh/`, {\n        refresh: refreshToken\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      const newAccessToken = refreshResponse.data.access;\n      localStorage.setItem('access_token', newAccessToken);\n      originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n      return API(originalRequest);\n    } catch (refreshError) {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('userData');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","Error","refreshResponse","post","refresh","newAccessToken","data","access","setItem","refreshError","removeItem","window","location","href"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/component/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/',\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n// Add this enhanced debugging to your api.js\nAPI.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('access_token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`\n        } else {\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\nAPI.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    async (error) => {\n\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n\n            try {\n                const refreshToken = localStorage.getItem('refresh_token');\n                if (!refreshToken) {\n                    throw new Error('No refresh token available');\n                }\n\n                const refreshResponse = await axios.post(\n                    `${process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/'}auth/token/refresh/`,\n                    { refresh: refreshToken },\n                    {\n                        headers: { 'Content-Type': 'application/json' },\n                        withCredentials: true\n                    }\n                );\n\n                const newAccessToken = refreshResponse.data.access;\n                localStorage.setItem('access_token', newAccessToken);\n\n                originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n                return API(originalRequest);\n            } catch (refreshError) {\n                localStorage.removeItem('access_token');\n                localStorage.removeItem('refresh_token');\n                localStorage.removeItem('userData');\n                window.location.href = '/login';\n                return Promise.reject(refreshError);\n            }\n        }\n\n        return Promise.reject(error);\n    }\n);export default API;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4BAA4B;EACtEC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AACF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD,CAAC,MAAM,CACP;EACA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;AAEDf,GAAG,CAACQ,YAAY,CAACU,QAAQ,CAACR,GAAG,CACxBQ,QAAQ,IAAK;EACV,OAAOA,QAAQ;AACnB,CAAC,EACD,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EAEb,MAAMC,eAAe,GAAGL,KAAK,CAACJ,MAAM;EAEpC,IAAI,EAAAQ,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC3DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACA,MAAMC,YAAY,GAAGV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,IAAI,CAACS,YAAY,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,eAAe,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CACpC,GAAGvB,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4BAA4B,qBAAqB,EACrF;QAAEsB,OAAO,EAAEJ;MAAa,CAAC,EACzB;QACIhB,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CD,eAAe,EAAE;MACrB,CACJ,CAAC;MAED,MAAMsB,cAAc,GAAGH,eAAe,CAACI,IAAI,CAACC,MAAM;MAClDjB,YAAY,CAACkB,OAAO,CAAC,cAAc,EAAEH,cAAc,CAAC;MAEpDR,eAAe,CAACb,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUqB,cAAc,EAAE;MACrE,OAAO5B,GAAG,CAACoB,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOY,YAAY,EAAE;MACnBnB,YAAY,CAACoB,UAAU,CAAC,cAAc,CAAC;MACvCpB,YAAY,CAACoB,UAAU,CAAC,eAAe,CAAC;MACxCpB,YAAY,CAACoB,UAAU,CAAC,UAAU,CAAC;MACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOpB,OAAO,CAACC,MAAM,CAACe,YAAY,CAAC;IACvC;EACJ;EAEA,OAAOhB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAAC,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}