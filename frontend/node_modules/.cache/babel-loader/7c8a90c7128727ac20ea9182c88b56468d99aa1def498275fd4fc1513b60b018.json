{"ast":null,"code":"var _jsxFileName = \"/Users/parhamgolmohammadi/Sales/frontend/src/component/NeoBrutalist/NeoBrutalistToggle.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../../styles/NeoBrutalistCSS/toggle.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NeoBrutalistToggle = ({\n  checked,\n  onChange,\n  label,\n  className = '',\n  disabled = false,\n  color = 'green',\n  // green, blue, red, yellow, purple\n  size = 'medium',\n  // small, medium, large\n  loading = false,\n  showIcons = false,\n  onIcon = '✓',\n  offIcon = '✕',\n  ...props\n}) => {\n  _s();\n  // Generate a unique ID for the input and label association for accessibility\n  const uniqueId = React.useId();\n  const toggleClasses = ['neo-brutalist-toggle', color && `${color}`, size !== 'medium' && size, disabled && 'disabled', loading && 'loading', className].filter(Boolean).join(' ');\n  const handleChange = e => {\n    if (!disabled && !loading && onChange) {\n      onChange(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: uniqueId,\n    className: toggleClasses,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: uniqueId,\n      type: \"checkbox\",\n      className: \"toggle-input\",\n      checked: checked,\n      onChange: handleChange,\n      disabled: disabled,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-track\",\n      children: [showIcons && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-track-icon on\",\n          children: onIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-track-icon off\",\n          children: offIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-knob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), label && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"toggle-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(NeoBrutalistToggle, \"j7NPILheLIfrWAvm8S/GM4Sml/8=\", false, function () {\n  return [React.useId];\n});\n_c = NeoBrutalistToggle;\nexport default NeoBrutalistToggle;\nvar _c;\n$RefreshReg$(_c, \"NeoBrutalistToggle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","NeoBrutalistToggle","checked","onChange","label","className","disabled","color","size","loading","showIcons","onIcon","offIcon","props","_s","uniqueId","useId","toggleClasses","filter","Boolean","join","handleChange","e","htmlFor","children","id","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/component/NeoBrutalist/NeoBrutalistToggle.js"],"sourcesContent":["import React from 'react';\nimport '../../styles/NeoBrutalistCSS/toggle.css';\n\nconst NeoBrutalistToggle = ({\n                                checked,\n                                onChange,\n                                label,\n                                className = '',\n                                disabled = false,\n                                color = 'green', // green, blue, red, yellow, purple\n                                size = 'medium', // small, medium, large\n                                loading = false,\n                                showIcons = false,\n                                onIcon = '✓',\n                                offIcon = '✕',\n                                ...props\n                            }) => {\n    // Generate a unique ID for the input and label association for accessibility\n    const uniqueId = React.useId();\n\n    const toggleClasses = [\n        'neo-brutalist-toggle',\n        color && `${color}`,\n        size !== 'medium' && size,\n        disabled && 'disabled',\n        loading && 'loading',\n        className\n    ].filter(Boolean).join(' ');\n\n    const handleChange = (e) => {\n        if (!disabled && !loading && onChange) {\n            onChange(e);\n        }\n    };\n\n    return (\n        <label htmlFor={uniqueId} className={toggleClasses}>\n            <input\n                id={uniqueId}\n                type=\"checkbox\"\n                className=\"toggle-input\"\n                checked={checked}\n                onChange={handleChange}\n                disabled={disabled}\n                {...props}\n            />\n            <div className=\"toggle-track\">\n                {showIcons && (\n                    <>\n                        <span className=\"toggle-track-icon on\">{onIcon}</span>\n                        <span className=\"toggle-track-icon off\">{offIcon}</span>\n                    </>\n                )}\n                <div className=\"toggle-knob\"></div>\n            </div>\n            {label && <span className=\"toggle-label\">{label}</span>}\n        </label>\n    );\n};\n\nexport default NeoBrutalistToggle;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,kBAAkB,GAAGA,CAAC;EACIC,OAAO;EACPC,QAAQ;EACRC,KAAK;EACLC,SAAS,GAAG,EAAE;EACdC,QAAQ,GAAG,KAAK;EAChBC,KAAK,GAAG,OAAO;EAAE;EACjBC,IAAI,GAAG,QAAQ;EAAE;EACjBC,OAAO,GAAG,KAAK;EACfC,SAAS,GAAG,KAAK;EACjBC,MAAM,GAAG,GAAG;EACZC,OAAO,GAAG,GAAG;EACb,GAAGC;AACP,CAAC,KAAK;EAAAC,EAAA;EAC9B;EACA,MAAMC,QAAQ,GAAGnB,KAAK,CAACoB,KAAK,CAAC,CAAC;EAE9B,MAAMC,aAAa,GAAG,CAClB,sBAAsB,EACtBV,KAAK,IAAI,GAAGA,KAAK,EAAE,EACnBC,IAAI,KAAK,QAAQ,IAAIA,IAAI,EACzBF,QAAQ,IAAI,UAAU,EACtBG,OAAO,IAAI,SAAS,EACpBJ,SAAS,CACZ,CAACa,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAE3B,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAI,CAAChB,QAAQ,IAAI,CAACG,OAAO,IAAIN,QAAQ,EAAE;MACnCA,QAAQ,CAACmB,CAAC,CAAC;IACf;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAOyB,OAAO,EAAER,QAAS;IAACV,SAAS,EAAEY,aAAc;IAAAO,QAAA,gBAC/C1B,OAAA;MACI2B,EAAE,EAAEV,QAAS;MACbW,IAAI,EAAC,UAAU;MACfrB,SAAS,EAAC,cAAc;MACxBH,OAAO,EAAEA,OAAQ;MACjBC,QAAQ,EAAEkB,YAAa;MACvBf,QAAQ,EAAEA,QAAS;MAAA,GACfO;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFhC,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAmB,QAAA,GACxBd,SAAS,iBACNZ,OAAA,CAAAE,SAAA;QAAAwB,QAAA,gBACI1B,OAAA;UAAMO,SAAS,EAAC,sBAAsB;UAAAmB,QAAA,EAAEb;QAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDhC,OAAA;UAAMO,SAAS,EAAC,uBAAuB;UAAAmB,QAAA,EAAEZ;QAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,eAC1D,CACL,eACDhC,OAAA;QAAKO,SAAS,EAAC;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACL1B,KAAK,iBAAIN,OAAA;MAAMO,SAAS,EAAC,cAAc;MAAAmB,QAAA,EAAEpB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEhB,CAAC;AAAChB,EAAA,CAvDIb,kBAAkB;EAAA,QAeHL,KAAK,CAACoB,KAAK;AAAA;AAAAe,EAAA,GAf1B9B,kBAAkB;AAyDxB,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}