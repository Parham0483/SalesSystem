{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n// Add this enhanced debugging to your api.js\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.log('üîë Request URL:', config.url);\n    console.log('üîë Token attached:', token.substring(0, 30) + '...');\n    console.log('üîë Headers:', config.headers);\n  } else {\n    console.log('‚ùå No token found for request:', config.url);\n  }\n  return config;\n}, error => Promise.reject(error));\nAPI.interceptors.response.use(response => {\n  console.log('‚úÖ Response OK:', response.config.url, response.status);\n  return response;\n}, async error => {\n  var _error$config, _error$response, _error$response2, _error$response3;\n  console.log('‚ùå Response Error:', (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url, (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n  console.log('‚ùå Error details:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  const originalRequest = error.config;\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    console.log('üîÑ Attempting token refresh...');\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      const refreshResponse = await axios.post(`${process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/'}auth/token/refresh/`, {\n        refresh: refreshToken\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      const newAccessToken = refreshResponse.data.access;\n      localStorage.setItem('access_token', newAccessToken);\n      console.log('‚úÖ Token refreshed successfully');\n      originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n      return API(originalRequest);\n    } catch (refreshError) {\n      console.log('‚ùå Token refresh failed:', refreshError);\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('userData');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","url","substring","error","Promise","reject","response","status","_error$config","_error$response","_error$response2","_error$response3","data","originalRequest","_retry","refreshToken","Error","refreshResponse","post","refresh","newAccessToken","access","setItem","refreshError","removeItem","window","location","href"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/component/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/',\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n// Add this enhanced debugging to your api.js\nAPI.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('access_token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n            console.log('üîë Request URL:', config.url);\n            console.log('üîë Token attached:', token.substring(0, 30) + '...');\n            console.log('üîë Headers:', config.headers);\n        } else {\n            console.log('‚ùå No token found for request:', config.url);\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\nAPI.interceptors.response.use(\n    (response) => {\n        console.log('‚úÖ Response OK:', response.config.url, response.status);\n        return response;\n    },\n    async (error) => {\n        console.log('‚ùå Response Error:', error.config?.url, error.response?.status);\n        console.log('‚ùå Error details:', error.response?.data);\n\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n            console.log('üîÑ Attempting token refresh...');\n\n            try {\n                const refreshToken = localStorage.getItem('refresh_token');\n                if (!refreshToken) {\n                    throw new Error('No refresh token available');\n                }\n\n                const refreshResponse = await axios.post(\n                    `${process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/'}auth/token/refresh/`,\n                    { refresh: refreshToken },\n                    {\n                        headers: { 'Content-Type': 'application/json' },\n                        withCredentials: true\n                    }\n                );\n\n                const newAccessToken = refreshResponse.data.access;\n                localStorage.setItem('access_token', newAccessToken);\n                console.log('‚úÖ Token refreshed successfully');\n\n                originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n                return API(originalRequest);\n            } catch (refreshError) {\n                console.log('‚ùå Token refresh failed:', refreshError);\n                localStorage.removeItem('access_token');\n                localStorage.removeItem('refresh_token');\n                localStorage.removeItem('userData');\n                window.location.href = '/login';\n                return Promise.reject(refreshError);\n            }\n        }\n\n        return Promise.reject(error);\n    }\n);export default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}