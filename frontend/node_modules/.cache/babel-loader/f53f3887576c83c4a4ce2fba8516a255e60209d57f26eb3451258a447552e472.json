{"ast":null,"code":"// src/react/index.tsx\nimport { useRef as useRef2, useState as useState3, useEffect as useEffect3 } from \"react\";\n\n// src/react/hooks.ts\nimport { useEffect as useEffect2, useState as useState2, useCallback as useCallback2 } from \"react\";\n\n// src/shared/hooks.ts\nimport { useEffect, useRef, useState, useCallback, useMemo } from \"react\";\n\n// src/shared/constants.ts\nvar UNICORN_STUDIO_VERSION = \"1.4.27\";\nvar UNICORN_STUDIO_CDN_URL = `https://cdn.jsdelivr.net/gh/hiunicornstudio/unicornstudio.js@v${UNICORN_STUDIO_VERSION}/dist/unicornStudio.umd.js`;\nvar DEFAULT_VALUES = {\n  width: \"100%\",\n  height: \"100%\",\n  scale: 1,\n  // 0.25 to 1.0\n  production: true,\n  dpi: 1.5,\n  fps: 60,\n  // 15, 24, 30, 60, or 120\n  altText: \"Scene\",\n  className: \"\",\n  lazyLoad: true,\n  showPlaceholderOnError: true,\n  showPlaceholderWhileLoading: true\n};\nvar VALID_FPS = [15, 24, 30, 60, 120];\n\n// src/shared/utils.ts\nfunction isWebGLSupported() {\n  if (typeof window === \"undefined\") return true;\n  try {\n    const canvas = document.createElement(\"canvas\");\n    const gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n    return !!gl;\n  } catch (e) {\n    return false;\n  }\n}\nfunction validateFPS(fps) {\n  return VALID_FPS.includes(fps);\n}\nfunction validateScale(scale) {\n  return scale >= 0.25 && scale <= 1;\n}\nfunction validateParameters(scale, fps) {\n  if (!validateScale(scale)) {\n    return `Invalid scale: ${scale}. Scale must be between 0.25 and 1.0`;\n  }\n  if (!validateFPS(fps)) {\n    return `Invalid fps: ${fps}. FPS must be one of: 15, 24, 30, 60, 120`;\n  }\n  return null;\n}\n\n// src/shared/hooks.ts\nfunction useUnicornScene({\n  elementRef,\n  projectId,\n  jsonFilePath,\n  production,\n  scale,\n  dpi,\n  fps,\n  lazyLoad,\n  altText,\n  ariaLabel,\n  isScriptLoaded,\n  onLoad,\n  onError\n}) {\n  const sceneRef = useRef(null);\n  const [initError, setInitError] = useState(null);\n  const hasAttemptedRef = useRef(false);\n  const initializationKeyRef = useRef(\"\");\n  const validationError = useMemo(() => {\n    return validateParameters(scale, fps);\n  }, [scale, fps]);\n  const prevValidationError = useRef(null);\n  useEffect(() => {\n    if (validationError !== prevValidationError.current) {\n      prevValidationError.current = validationError;\n      if (validationError) {\n        const error = new Error(validationError);\n        setInitError(error);\n        onError == null ? void 0 : onError(error);\n      } else {\n        setInitError(null);\n      }\n    }\n  }, [validationError, onError]);\n  const destroyScene = useCallback(() => {\n    var _a;\n    if ((_a = sceneRef.current) == null ? void 0 : _a.destroy) {\n      sceneRef.current.destroy();\n      sceneRef.current = null;\n    }\n  }, []);\n  const initializeScene = useCallback(async () => {\n    var _a;\n    if (!elementRef.current || !isScriptLoaded || validationError) return;\n    const currentKey = `${projectId || \"\"}-${jsonFilePath || \"\"}-${scale}-${dpi}-${fps}-${production ? \"prod\" : \"dev\"}`;\n    if (initializationKeyRef.current === currentKey && hasAttemptedRef.current && initError) {\n      return;\n    }\n    initializationKeyRef.current = currentKey;\n    hasAttemptedRef.current = true;\n    try {\n      destroyScene();\n      if (!((_a = window.UnicornStudio) == null ? void 0 : _a.addScene)) {\n        throw new Error(\"UnicornStudio.addScene not found\");\n      }\n      const sceneConfig = {\n        elementId: elementRef.current.id || `unicorn-${Math.random().toString(36).slice(2, 11)}`,\n        scale,\n        dpi,\n        fps,\n        lazyLoad,\n        altText,\n        ariaLabel,\n        production\n      };\n      if (!elementRef.current.id) {\n        elementRef.current.id = sceneConfig.elementId;\n      }\n      if (jsonFilePath) {\n        sceneConfig.filePath = jsonFilePath;\n      } else if (projectId) {\n        sceneConfig.projectId = projectId.split(\"?\")[0];\n      } else {\n        throw new Error(\"No project ID or JSON file path provided\");\n      }\n      let timeoutId;\n      const timeoutPromise = new Promise((_, reject) => {\n        timeoutId = setTimeout(() => reject(new Error(\"Scene initialization timeout\")), 15e3);\n      });\n      const cleanup = () => {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n      };\n      try {\n        const scene = await Promise.race([window.UnicornStudio.addScene(sceneConfig), timeoutPromise]);\n        cleanup();\n        if (scene) {\n          sceneRef.current = scene;\n          hasAttemptedRef.current = false;\n          setInitError(null);\n          onLoad == null ? void 0 : onLoad();\n        } else {\n          throw new Error(\"Failed to initialize scene\");\n        }\n      } catch (error) {\n        cleanup();\n        throw error;\n      }\n    } catch (error) {\n      const err = error instanceof Error ? error : new Error(\"Unknown error\");\n      let sanitizedMessage = err.message;\n      if (sanitizedMessage.includes(\"404\") || sanitizedMessage.includes(\"Failed to fetch\")) {\n        sanitizedMessage = \"Resource not found\";\n      } else if (sanitizedMessage.includes(\"Network\") || sanitizedMessage.includes(\"network\")) {\n        sanitizedMessage = \"Network error occurred\";\n      } else if (sanitizedMessage.includes(\"timeout\")) {\n        sanitizedMessage = \"Loading timeout\";\n      }\n      const sanitizedError = new Error(sanitizedMessage);\n      setInitError(sanitizedError);\n      onError == null ? void 0 : onError(sanitizedError);\n    }\n  }, [elementRef, isScriptLoaded, jsonFilePath, projectId, production, scale, dpi, fps, lazyLoad, altText, ariaLabel, destroyScene, onLoad, onError, validationError, initError]);\n  useEffect(() => {\n    if (isScriptLoaded) {\n      void initializeScene();\n    }\n    return destroyScene;\n  }, [isScriptLoaded, initializeScene, destroyScene]);\n  useEffect(() => {\n    const newKey = `${projectId || \"\"}-${jsonFilePath || \"\"}-${scale}-${dpi}-${fps}-${production ? \"prod\" : \"dev\"}`;\n    if (initializationKeyRef.current !== newKey) {\n      hasAttemptedRef.current = false;\n      setInitError(null);\n    }\n  }, [projectId, jsonFilePath, scale, dpi, fps, production]);\n  return {\n    error: initError\n  };\n}\n\n// src/react/hooks.ts\nfunction useUnicornStudioScript(scriptUrl) {\n  const [isLoaded, setIsLoaded] = useState2(false);\n  const [error, setError] = useState2(null);\n  const handleScriptLoad = useCallback2(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleScriptError = useCallback2(() => {\n    setError(new Error(\"Failed to load UnicornStudio script\"));\n  }, []);\n  useEffect2(() => {\n    const existingScript = document.querySelector(`script[src=\"${scriptUrl}\"]`);\n    if (existingScript) {\n      if (existingScript.getAttribute(\"data-loaded\") === \"true\") {\n        setIsLoaded(true);\n        return;\n      }\n      existingScript.addEventListener(\"load\", handleScriptLoad);\n      existingScript.addEventListener(\"error\", handleScriptError);\n      return () => {\n        existingScript.removeEventListener(\"load\", handleScriptLoad);\n        existingScript.removeEventListener(\"error\", handleScriptError);\n      };\n    }\n    const script = document.createElement(\"script\");\n    script.src = scriptUrl;\n    script.async = true;\n    script.addEventListener(\"load\", () => {\n      script.setAttribute(\"data-loaded\", \"true\");\n      handleScriptLoad();\n    });\n    script.addEventListener(\"error\", handleScriptError);\n    document.head.appendChild(script);\n    return () => {\n      if (script.parentNode) {\n        script.removeEventListener(\"load\", handleScriptLoad);\n        script.removeEventListener(\"error\", handleScriptError);\n      }\n    };\n  }, [scriptUrl, handleScriptLoad, handleScriptError]);\n  return {\n    isLoaded,\n    error,\n    handleScriptLoad,\n    handleScriptError\n  };\n}\n\n// src/shared/styles.ts\nvar unicornStyles = {\n  container: {\n    position: \"relative\",\n    width: \"var(--unicorn-width)\",\n    height: \"var(--unicorn-height)\"\n  },\n  errorWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\"\n  },\n  errorBox: {\n    textAlign: \"center\",\n    padding: \"1rem\",\n    borderRadius: \"0.5rem\",\n    backgroundColor: \"rgb(254 242 242)\",\n    color: \"rgb(239 68 68)\"\n  },\n  errorTitle: {\n    fontWeight: \"600\",\n    marginBottom: \"0.25rem\"\n  },\n  errorMessage: {\n    fontSize: \"0.875rem\",\n    marginTop: \"0.25rem\"\n  }\n};\n\n// src/react/index.tsx\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction UnicornScene({\n  projectId,\n  jsonFilePath,\n  width = DEFAULT_VALUES.width,\n  height = DEFAULT_VALUES.height,\n  scale = DEFAULT_VALUES.scale,\n  dpi = DEFAULT_VALUES.dpi,\n  fps = DEFAULT_VALUES.fps,\n  altText = DEFAULT_VALUES.altText,\n  ariaLabel,\n  className = DEFAULT_VALUES.className,\n  lazyLoad = DEFAULT_VALUES.lazyLoad,\n  production = DEFAULT_VALUES.production,\n  placeholder,\n  placeholderClassName,\n  showPlaceholderOnError = DEFAULT_VALUES.showPlaceholderOnError,\n  showPlaceholderWhileLoading = DEFAULT_VALUES.showPlaceholderWhileLoading,\n  onLoad,\n  onError\n}) {\n  const elementRef = useRef2(null);\n  const [isSceneLoaded, setIsSceneLoaded] = useState3(false);\n  const [webGLSupported, setWebGLSupported] = useState3(true);\n  const {\n    isLoaded,\n    error: scriptError\n  } = useUnicornStudioScript(UNICORN_STUDIO_CDN_URL);\n  const {\n    error: sceneError\n  } = useUnicornScene({\n    elementRef,\n    projectId,\n    jsonFilePath,\n    production,\n    scale,\n    dpi,\n    fps,\n    lazyLoad,\n    altText,\n    ariaLabel: ariaLabel || altText,\n    isScriptLoaded: isLoaded,\n    onLoad: () => {\n      setIsSceneLoaded(true);\n      onLoad == null ? void 0 : onLoad();\n    },\n    onError\n  });\n  const error = scriptError || sceneError;\n  useEffect3(() => {\n    setWebGLSupported(isWebGLSupported());\n  }, []);\n  const showPlaceholder = (placeholder || placeholderClassName) && (!webGLSupported || showPlaceholderWhileLoading && !isSceneLoaded || showPlaceholderOnError && error);\n  const numericWidth = typeof width === \"number\" ? width : 0;\n  const numericHeight = typeof height === \"number\" ? height : 0;\n  const useNumericDimensions = typeof width === \"number\" && typeof height === \"number\";\n  const customProperties = {\n    \"--unicorn-width\": typeof width === \"number\" ? `${width}px` : width,\n    \"--unicorn-height\": typeof height === \"number\" ? `${height}px` : height\n  };\n  return /* @__PURE__ */jsxs(\"div\", {\n    ref: elementRef,\n    style: {\n      ...unicornStyles.container,\n      ...customProperties\n    },\n    className,\n    children: [showPlaceholder && (placeholder || placeholderClassName) && /* @__PURE__ */jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        inset: 0\n      },\n      children: typeof placeholder === \"string\" ? /* @__PURE__ */jsx(\"img\", {\n        src: placeholder,\n        alt: altText,\n        style: {\n          width: useNumericDimensions ? `${numericWidth}px` : \"100%\",\n          height: useNumericDimensions ? `${numericHeight}px` : \"100%\",\n          objectFit: \"cover\"\n        }\n      }) : placeholder ? placeholder : placeholderClassName ? /* @__PURE__ */jsx(\"div\", {\n        className: placeholderClassName,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        \"aria-label\": altText\n      }) : null\n    }), error && !showPlaceholder && /* @__PURE__ */jsx(\"div\", {\n      style: unicornStyles.errorWrapper,\n      children: /* @__PURE__ */jsxs(\"div\", {\n        style: unicornStyles.errorBox,\n        children: [/* @__PURE__ */jsx(\"p\", {\n          style: unicornStyles.errorTitle,\n          children: \"Error loading scene\"\n        }), /* @__PURE__ */jsx(\"p\", {\n          style: unicornStyles.errorMessage,\n          children: error.message\n        })]\n      })\n    })]\n  });\n}\nvar react_default = UnicornScene;\nexport { UnicornScene, react_default as default };","map":{"version":3,"names":["useRef","useRef2","useState","useState3","useEffect","useEffect3","useEffect2","useState2","useCallback","useCallback2","useMemo","UNICORN_STUDIO_VERSION","UNICORN_STUDIO_CDN_URL","DEFAULT_VALUES","width","height","scale","production","dpi","fps","altText","className","lazyLoad","showPlaceholderOnError","showPlaceholderWhileLoading","VALID_FPS","isWebGLSupported","window","canvas","document","createElement","gl","getContext","e","validateFPS","includes","validateScale","validateParameters","useUnicornScene","elementRef","projectId","jsonFilePath","ariaLabel","isScriptLoaded","onLoad","onError","sceneRef","initError","setInitError","hasAttemptedRef","initializationKeyRef","validationError","prevValidationError","current","error","Error","destroyScene","_a","destroy","initializeScene","currentKey","UnicornStudio","addScene","sceneConfig","elementId","id","Math","random","toString","slice","filePath","split","timeoutId","timeoutPromise","Promise","_","reject","setTimeout","cleanup","clearTimeout","scene","race","err","sanitizedMessage","message","sanitizedError","newKey","useUnicornStudioScript","scriptUrl","isLoaded","setIsLoaded","setError","handleScriptLoad","handleScriptError","existingScript","querySelector","getAttribute","addEventListener","removeEventListener","script","src","async","setAttribute","head","appendChild","parentNode","unicornStyles","container","position","errorWrapper","display","alignItems","justifyContent","errorBox","textAlign","padding","borderRadius","backgroundColor","color","errorTitle","fontWeight","marginBottom","errorMessage","fontSize","marginTop","jsx","jsxs","UnicornScene","placeholder","placeholderClassName","isSceneLoaded","setIsSceneLoaded","webGLSupported","setWebGLSupported","scriptError","sceneError","showPlaceholder","numericWidth","numericHeight","useNumericDimensions","customProperties","ref","style","children","inset","alt","objectFit","react_default"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/node_modules/unicornstudio-react/src/react/index.tsx","/Users/parhamgolmohammadi/Sales/frontend/node_modules/unicornstudio-react/src/react/hooks.ts","/Users/parhamgolmohammadi/Sales/frontend/node_modules/unicornstudio-react/src/shared/hooks.ts","/Users/parhamgolmohammadi/Sales/frontend/node_modules/unicornstudio-react/src/shared/constants.ts","/Users/parhamgolmohammadi/Sales/frontend/node_modules/unicornstudio-react/src/shared/utils.ts","/Users/parhamgolmohammadi/Sales/frontend/node_modules/unicornstudio-react/src/shared/styles.ts"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport type { UnicornSceneProps } from \"../shared/types\";\nimport { useUnicornStudioScript, useUnicornScene } from \"./hooks\";\nimport { UNICORN_STUDIO_CDN_URL, DEFAULT_VALUES } from \"../shared/constants\";\nimport { unicornStyles } from \"../shared/styles\";\nimport { isWebGLSupported } from \"../shared/utils\";\n\nfunction UnicornScene({\n  projectId,\n  jsonFilePath,\n  width = DEFAULT_VALUES.width,\n  height = DEFAULT_VALUES.height,\n  scale = DEFAULT_VALUES.scale,\n  dpi = DEFAULT_VALUES.dpi,\n  fps = DEFAULT_VALUES.fps,\n  altText = DEFAULT_VALUES.altText,\n  ariaLabel,\n  className = DEFAULT_VALUES.className,\n  lazyLoad = DEFAULT_VALUES.lazyLoad,\n  production = DEFAULT_VALUES.production,\n  placeholder,\n  placeholderClassName,\n  showPlaceholderOnError = DEFAULT_VALUES.showPlaceholderOnError,\n  showPlaceholderWhileLoading = DEFAULT_VALUES.showPlaceholderWhileLoading,\n  onLoad,\n  onError,\n}: UnicornSceneProps) {\n  const elementRef = useRef<HTMLDivElement>(null);\n  const [isSceneLoaded, setIsSceneLoaded] = useState(false);\n  const [webGLSupported, setWebGLSupported] = useState(true);\n\n  const {\n    isLoaded,\n    error: scriptError,\n  } = useUnicornStudioScript(UNICORN_STUDIO_CDN_URL);\n  \n  const { error: sceneError } = useUnicornScene({\n    elementRef,\n    projectId,\n    jsonFilePath,\n    production,\n    scale,\n    dpi,\n    fps,\n    lazyLoad,\n    altText,\n    ariaLabel: ariaLabel || altText,\n    isScriptLoaded: isLoaded,\n    onLoad: () => {\n      setIsSceneLoaded(true);\n      onLoad?.();\n    },\n    onError,\n  });\n\n  const error = scriptError || sceneError;\n\n  // Check WebGL support on mount\n  useEffect(() => {\n    setWebGLSupported(isWebGLSupported());\n  }, []);\n\n  // Determine if placeholder should be shown\n  const showPlaceholder =\n    (placeholder || placeholderClassName) &&\n    (!webGLSupported ||\n      (showPlaceholderWhileLoading && !isSceneLoaded) ||\n      (showPlaceholderOnError && error));\n\n  // Calculate dimensions for both container and image\n  const numericWidth = typeof width === \"number\" ? width : 0;\n  const numericHeight = typeof height === \"number\" ? height : 0;\n  const useNumericDimensions =\n    typeof width === \"number\" && typeof height === \"number\";\n\n  // Build CSS custom properties for dynamic dimensions\n  const customProperties = {\n    \"--unicorn-width\": typeof width === \"number\" ? `${width}px` : width,\n    \"--unicorn-height\": typeof height === \"number\" ? `${height}px` : height,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      ref={elementRef}\n      style={{ ...unicornStyles.container, ...customProperties }}\n      className={className}\n    >\n      {showPlaceholder && (placeholder || placeholderClassName) && (\n        <div style={{ position: \"absolute\", inset: 0 }}>\n          {typeof placeholder === \"string\" ? (\n            <img\n              src={placeholder}\n              alt={altText}\n              style={{\n                width: useNumericDimensions ? `${numericWidth}px` : \"100%\",\n                height: useNumericDimensions ? `${numericHeight}px` : \"100%\",\n                objectFit: \"cover\",\n              }}\n            />\n          ) : placeholder ? (\n            placeholder\n          ) : placeholderClassName ? (\n            <div\n              className={placeholderClassName}\n              style={{ width: \"100%\", height: \"100%\" }}\n              aria-label={altText}\n            />\n          ) : null}\n        </div>\n      )}\n      {error && !showPlaceholder && (\n        <div style={unicornStyles.errorWrapper}>\n          <div style={unicornStyles.errorBox}>\n            <p style={unicornStyles.errorTitle}>Error loading scene</p>\n            <p style={unicornStyles.errorMessage}>{error.message}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UnicornScene;\nexport { UnicornScene };\n\n// Re-export types for convenience\nexport type { UnicornSceneProps } from \"../shared/types\";","import { useEffect, useState, useCallback } from \"react\";\n\nexport function useUnicornStudioScript(scriptUrl: string) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const handleScriptLoad = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n\n  const handleScriptError = useCallback(() => {\n    setError(new Error(\"Failed to load UnicornStudio script\"));\n  }, []);\n\n  useEffect(() => {\n    // Check if script is already loaded\n    const existingScript = document.querySelector(\n      `script[src=\"${scriptUrl}\"]`\n    ) as HTMLScriptElement;\n\n    if (existingScript) {\n      if (existingScript.getAttribute(\"data-loaded\") === \"true\") {\n        setIsLoaded(true);\n        return;\n      }\n\n      // If script exists but not loaded, attach listeners\n      existingScript.addEventListener(\"load\", handleScriptLoad);\n      existingScript.addEventListener(\"error\", handleScriptError);\n\n      return () => {\n        existingScript.removeEventListener(\"load\", handleScriptLoad);\n        existingScript.removeEventListener(\"error\", handleScriptError);\n      };\n    }\n\n    // Create and load the script\n    const script = document.createElement(\"script\");\n    script.src = scriptUrl;\n    script.async = true;\n    script.addEventListener(\"load\", () => {\n      script.setAttribute(\"data-loaded\", \"true\");\n      handleScriptLoad();\n    });\n    script.addEventListener(\"error\", handleScriptError);\n\n    document.head.appendChild(script);\n\n    return () => {\n      if (script.parentNode) {\n        script.removeEventListener(\"load\", handleScriptLoad);\n        script.removeEventListener(\"error\", handleScriptError);\n        // Don't remove script from DOM to avoid re-loading on remount\n      }\n    };\n  }, [scriptUrl, handleScriptLoad, handleScriptError]);\n\n  return { isLoaded, error, handleScriptLoad, handleScriptError };\n}\n\n// Re-export shared hooks\nexport { useUnicornScene } from \"../shared/hooks\";\nexport type { UseUnicornSceneParams } from \"../shared/hooks\";\n","import { useEffect, useRef, useState, useCallback, useMemo } from \"react\";\nimport type {\n  UnicornStudioScene,\n  UnicornSceneConfig,\n  ValidFPS,\n  ScaleRange,\n} from \"./types\";\nimport { validateParameters } from \"./utils\";\n\n// Custom hook for scene management\nexport interface UseUnicornSceneParams {\n  elementRef: React.RefObject<HTMLDivElement | null>;\n  projectId?: string;\n  jsonFilePath?: string;\n  production?: boolean;\n  scale: ScaleRange;\n  dpi: number;\n  fps: ValidFPS;\n  lazyLoad: boolean;\n  altText: string;\n  ariaLabel: string;\n  isScriptLoaded: boolean;\n  onLoad?: () => void;\n  onError?: (error: Error) => void;\n}\n\nexport function useUnicornScene({\n  elementRef,\n  projectId,\n  jsonFilePath,\n  production,\n  scale,\n  dpi,\n  fps,\n  lazyLoad,\n  altText,\n  ariaLabel,\n  isScriptLoaded,\n  onLoad,\n  onError,\n}: UseUnicornSceneParams) {\n  const sceneRef = useRef<UnicornStudioScene | null>(null);\n  const [initError, setInitError] = useState<Error | null>(null);\n  const hasAttemptedRef = useRef(false);\n  const initializationKeyRef = useRef<string>(\"\");\n\n  // Validate parameters early and memoize the result to prevent loops\n  const validationError = useMemo(() => {\n    return validateParameters(scale, fps);\n  }, [scale, fps]);\n\n  const prevValidationError = useRef<string | null>(null);\n\n  useEffect(() => {\n    if (validationError !== prevValidationError.current) {\n      prevValidationError.current = validationError;\n\n      if (validationError) {\n        const error = new Error(validationError);\n        setInitError(error);\n        onError?.(error);\n      } else {\n        setInitError(null);\n      }\n    }\n  }, [validationError, onError]);\n\n  const destroyScene = useCallback(() => {\n    if (sceneRef.current?.destroy) {\n      sceneRef.current.destroy();\n      sceneRef.current = null;\n    }\n  }, []);\n\n  const initializeScene = useCallback(async () => {\n    if (!elementRef.current || !isScriptLoaded || validationError) return;\n\n    // Create a unique key for this configuration\n    const currentKey = `${projectId || \"\"}-${jsonFilePath || \"\"}-${scale}-${dpi}-${fps}-${production ? \"prod\" : \"dev\"}`;\n\n    // If we've already attempted with this key and failed, don't retry\n    if (\n      initializationKeyRef.current === currentKey &&\n      hasAttemptedRef.current &&\n      initError\n    ) {\n      return;\n    }\n\n    // Update the initialization key\n    initializationKeyRef.current = currentKey;\n    hasAttemptedRef.current = true;\n\n    try {\n      destroyScene();\n\n      // Check if UnicornStudio is available\n      if (!window.UnicornStudio?.addScene) {\n        throw new Error(\"UnicornStudio.addScene not found\");\n      }\n\n      // Prepare scene configuration\n      const sceneConfig: UnicornSceneConfig = {\n        elementId:\n          elementRef.current.id ||\n          `unicorn-${Math.random().toString(36).slice(2, 11)}`,\n        scale,\n        dpi,\n        fps,\n        lazyLoad,\n        altText,\n        ariaLabel,\n        production,\n      };\n\n      // Set the ID if it doesn't exist\n      if (!elementRef.current.id) {\n        elementRef.current.id = sceneConfig.elementId;\n      }\n\n      // Add project source\n      if (jsonFilePath) {\n        sceneConfig.filePath = jsonFilePath;\n      } else if (projectId) {\n        sceneConfig.projectId = projectId.split(\"?\")[0]; // Clean project ID\n      } else {\n        throw new Error(\"No project ID or JSON file path provided\");\n      }\n\n      // Initialize the scene using the dynamic method with a timeout\n      // This prevents infinite retries from the Unicorn Studio library\n      let timeoutId: NodeJS.Timeout | undefined;\n      const timeoutPromise = new Promise<never>((_, reject) => {\n        timeoutId = setTimeout(\n          () => reject(new Error(\"Scene initialization timeout\")),\n          15000\n        );\n      });\n\n      const cleanup = () => {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n      };\n\n      try {\n        const scene = await Promise.race([\n          window.UnicornStudio.addScene(sceneConfig),\n          timeoutPromise,\n        ]);\n\n        cleanup();\n\n        if (scene) {\n          sceneRef.current = scene;\n          hasAttemptedRef.current = false; // Reset on success\n          setInitError(null); // Clear any previous errors\n          onLoad?.();\n        } else {\n          throw new Error(\"Failed to initialize scene\");\n        }\n      } catch (error) {\n        cleanup();\n        throw error;\n      }\n    } catch (error) {\n      const err = error instanceof Error ? error : new Error(\"Unknown error\");\n\n      // Sanitize error messages to not expose URLs\n      let sanitizedMessage = err.message;\n      if (\n        sanitizedMessage.includes(\"404\") ||\n        sanitizedMessage.includes(\"Failed to fetch\")\n      ) {\n        sanitizedMessage = \"Resource not found\";\n      } else if (\n        sanitizedMessage.includes(\"Network\") ||\n        sanitizedMessage.includes(\"network\")\n      ) {\n        sanitizedMessage = \"Network error occurred\";\n      } else if (sanitizedMessage.includes(\"timeout\")) {\n        sanitizedMessage = \"Loading timeout\";\n      }\n\n      const sanitizedError = new Error(sanitizedMessage);\n      setInitError(sanitizedError);\n      onError?.(sanitizedError);\n    }\n  }, [\n    elementRef,\n    isScriptLoaded,\n    jsonFilePath,\n    projectId,\n    production,\n    scale,\n    dpi,\n    fps,\n    lazyLoad,\n    altText,\n    ariaLabel,\n    destroyScene,\n    onLoad,\n    onError,\n    validationError,\n    initError,\n  ]);\n\n  useEffect(() => {\n    if (isScriptLoaded) {\n      void initializeScene();\n    }\n\n    return destroyScene;\n  }, [isScriptLoaded, initializeScene, destroyScene]);\n\n  // Reset state when projectId or jsonFilePath changes\n  useEffect(() => {\n    const newKey = `${projectId || \"\"}-${jsonFilePath || \"\"}-${scale}-${dpi}-${fps}-${production ? \"prod\" : \"dev\"}`;\n    if (initializationKeyRef.current !== newKey) {\n      hasAttemptedRef.current = false;\n      setInitError(null);\n    }\n  }, [projectId, jsonFilePath, scale, dpi, fps, production]);\n\n  return { error: initError };\n}","import type { ValidFPS, ScaleRange } from \"./types\";\n\n// UnicornStudio configuration constants\nexport const UNICORN_STUDIO_VERSION = \"1.4.27\";\nexport const UNICORN_STUDIO_CDN_URL = `https://cdn.jsdelivr.net/gh/hiunicornstudio/unicornstudio.js@v${UNICORN_STUDIO_VERSION}/dist/unicornStudio.umd.js`;\n\n// Default values for UnicornScene props\nexport const DEFAULT_VALUES = {\n  width: \"100%\" as const,\n  height: \"100%\" as const,\n  scale: 1 as ScaleRange, // 0.25 to 1.0\n  production: true,\n  dpi: 1.5,\n  fps: 60 as ValidFPS, // 15, 24, 30, 60, or 120\n  altText: \"Scene\",\n  className: \"\",\n  lazyLoad: true,\n  showPlaceholderOnError: true,\n  showPlaceholderWhileLoading: true,\n} as const;\n\nexport const VALID_FPS = [15, 24, 30, 60, 120] as const;\n","import { VALID_FPS } from \"./constants\";\nimport type { ScaleRange, ValidFPS } from \"./types\";\n\nexport function isWebGLSupported(): boolean {\n  if (typeof window === \"undefined\") return true; // Assume supported during SSR\n\n  try {\n    const canvas = document.createElement(\"canvas\");\n    const gl =\n      canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n    return !!gl;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function validateFPS(fps: number): fps is ValidFPS {\n  return VALID_FPS.includes(fps as ValidFPS);\n}\n\nexport function validateScale(scale: number): scale is ScaleRange {\n  return scale >= 0.25 && scale <= 1.0;\n}\n\nexport function validateParameters(scale: number, fps: number): string | null {\n  if (!validateScale(scale)) {\n    return `Invalid scale: ${scale}. Scale must be between 0.25 and 1.0`;\n  }\n  if (!validateFPS(fps)) {\n    return `Invalid fps: ${fps}. FPS must be one of: 15, 24, 30, 60, 120`;\n  }\n  return null;\n}\n","export const unicornStyles = {\n  container: {\n    position: \"relative\" as const,\n    width: \"var(--unicorn-width)\",\n    height: \"var(--unicorn-height)\",\n  },\n  errorWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n  },\n  errorBox: {\n    textAlign: \"center\" as const,\n    padding: \"1rem\",\n    borderRadius: \"0.5rem\",\n    backgroundColor: \"rgb(254 242 242)\",\n    color: \"rgb(239 68 68)\",\n  },\n  errorTitle: {\n    fontWeight: \"600\",\n    marginBottom: \"0.25rem\",\n  },\n  errorMessage: {\n    fontSize: \"0.875rem\",\n    marginTop: \"0.25rem\",\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}