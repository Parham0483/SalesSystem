{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the access token\nAPI.interceptors.request.use(config => {\n  // Get access token from localStorage (updated key name)\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.log('ðŸ”‘ Attaching token:', token.substring(0, 20) + '...');\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add a response interceptor to handle token refresh\nAPI.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // If we get a 401 error and haven't already tried to refresh\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        const refreshResponse = await axios.post(`${process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/'}auth/token/refresh/`, {\n          refresh: refreshToken\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        const newAccessToken = refreshResponse.data.access;\n        localStorage.setItem('access_token', newAccessToken);\n\n        // Update the authorization header for the original request\n        originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n\n        // Retry the original request\n        return API(originalRequest);\n      }\n    } catch (refreshError) {\n      // Refresh failed, redirect to login\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('userData');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","substring","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","refreshResponse","post","refresh","newAccessToken","data","access","setItem","refreshError","removeItem","window","location","href"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/component/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/',\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Add a request interceptor to include the access token\nAPI.interceptors.request.use(\n    (config) => {\n        // Get access token from localStorage (updated key name)\n        const token = localStorage.getItem('access_token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n            console.log('ðŸ”‘ Attaching token:', token.substring(0, 20) + '...');\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// Add a response interceptor to handle token refresh\nAPI.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n\n        // If we get a 401 error and haven't already tried to refresh\n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n\n            try {\n                const refreshToken = localStorage.getItem('refresh_token');\n                if (refreshToken) {\n                    const refreshResponse = await axios.post(\n                        `${process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/'}auth/token/refresh/`,\n                        { refresh: refreshToken },\n                        {\n                            headers: { 'Content-Type': 'application/json' },\n                            withCredentials: true\n                        }\n                    );\n\n                    const newAccessToken = refreshResponse.data.access;\n                    localStorage.setItem('access_token', newAccessToken);\n\n                    // Update the authorization header for the original request\n                    originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n\n                    // Retry the original request\n                    return API(originalRequest);\n                }\n            } catch (refreshError) {\n                // Refresh failed, redirect to login\n                localStorage.removeItem('access_token');\n                localStorage.removeItem('refresh_token');\n                localStorage.removeItem('userData');\n                window.location.href = '/login';\n                return Promise.reject(refreshError);\n            }\n        }\n\n        return Promise.reject(error);\n    }\n);\n\nexport default API;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4BAA4B;EACtEC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;IACnDG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,KAAK,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;EACtE;EACA,OAAON,MAAM;AACjB,CAAC,EACAO,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;;AAED;AACAlB,GAAG,CAACQ,YAAY,CAACa,QAAQ,CAACX,GAAG,CACxBW,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACb,MAAMC,eAAe,GAAGL,KAAK,CAACP,MAAM;;EAEpC;EACA,IAAI,EAAAW,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC3DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACA,MAAMC,YAAY,GAAGb,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,IAAIY,YAAY,EAAE;QACd,MAAMC,eAAe,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CACpC,GAAGzB,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4BAA4B,qBAAqB,EACrF;UAAEwB,OAAO,EAAEH;QAAa,CAAC,EACzB;UACInB,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CD,eAAe,EAAE;QACrB,CACJ,CAAC;QAED,MAAMwB,cAAc,GAAGH,eAAe,CAACI,IAAI,CAACC,MAAM;QAClDnB,YAAY,CAACoB,OAAO,CAAC,cAAc,EAAEH,cAAc,CAAC;;QAEpD;QACAP,eAAe,CAAChB,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUuB,cAAc,EAAE;;QAErE;QACA,OAAO9B,GAAG,CAACuB,eAAe,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOW,YAAY,EAAE;MACnB;MACArB,YAAY,CAACsB,UAAU,CAAC,cAAc,CAAC;MACvCtB,YAAY,CAACsB,UAAU,CAAC,eAAe,CAAC;MACxCtB,YAAY,CAACsB,UAAU,CAAC,UAAU,CAAC;MACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOnB,OAAO,CAACC,MAAM,CAACc,YAAY,CAAC;IACvC;EACJ;EAEA,OAAOf,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}