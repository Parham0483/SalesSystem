{"ast":null,"code":"var _jsxFileName = \"/Users/parhamgolmohammadi/Sales/frontend/src/pages/AdminDashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../component/api';\nimport Modal from '../component/Modal';\nimport AdminOrderDetailPage from '../component/AdminOrderDetailPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboardPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const fetchOrders = async () => {\n    try {\n      const res = await API.get('/orders/');\n      setOrders(res.data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        navigate('/');\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userData');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          margin: 8,\n          padding: 8\n        },\n        onClick: () => setSelectedOrder(order),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Order #\", order.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), \" - Status: \", order.status]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), selectedOrder && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setSelectedOrder(null),\n      children: /*#__PURE__*/_jsxDEV(AdminOrderDetailPage, {\n        orderId: selectedOrder.id,\n        onOrderUpdated: () => {\n          fetchOrders();\n          setSelectedOrder(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboardPage, \"Pyi68oYwxqg4tR+7/o9p1lEirE4=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboardPage;\nexport default AdminDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","API","Modal","AdminOrderDetailPage","jsxDEV","_jsxDEV","AdminDashboardPage","_s","orders","setOrders","selectedOrder","setSelectedOrder","navigate","fetchOrders","res","get","data","err","_err$response","response","status","handleLogout","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","order","style","border","margin","padding","id","onClose","orderId","onOrderUpdated","_c","$RefreshReg$"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/pages/AdminDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../component/api';\nimport Modal from '../component/Modal';\nimport AdminOrderDetailPage from '../component/AdminOrderDetailPage';\n\nconst AdminDashboardPage = () => {\n    const [orders, setOrders] = useState([]);\n    const [selectedOrder, setSelectedOrder] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    const fetchOrders = async () => {\n        try {\n            const res = await API.get('/orders/');\n            setOrders(res.data);\n        } catch (err) {\n            if (err.response?.status === 401) {\n                navigate('/');\n            }\n        }\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userData');\n        navigate('/');\n    };\n\n    return (\n        <div>\n            <h1>Admin Orders</h1>\n            <button onClick={handleLogout}>Logout</button>\n            <div>\n                {orders.map(order => (\n                    <div key={order.id} style={{ border: '1px solid #ccc', margin: 8, padding: 8 }}\n                         onClick={() => setSelectedOrder(order)}>\n                        <strong>Order #{order.id}</strong> - Status: {order.status}\n                    </div>\n                ))}\n            </div>\n\n            {selectedOrder && (\n                <Modal onClose={() => setSelectedOrder(null)}>\n                    <AdminOrderDetailPage\n                        orderId={selectedOrder.id}\n                        onOrderUpdated= {() => {\n                            fetchOrders();\n                            setSelectedOrder(null);\n                        }}\n                    />\n                </Modal>\n            )}\n        </div>\n    );\n};\n\nexport default AdminDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}