{"ast":null,"code":"var _jsxFileName = \"/Users/parhamgolmohammadi/Sales/frontend/src/pages/MainPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const canvasRef = useRef(null);\n  const vertexShaderSource = `\n        attribute vec2 position;\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    `;\n  const fragmentShaderSource = `\n        precision mediump float;\n        uniform float iTime;\n        uniform vec2 iResolution;\n        uniform vec2 iClickPositions[10];\n        uniform float iClickTimes[10];\n        uniform int iClickCount;\n\n        void main() {\n            vec2 uv = gl_FragCoord.xy / iResolution.xy;\n            vec3 color = vec3(0.0);\n\n            color.r = 0.2 + 0.2 * sin(iTime + uv.x * 10.0);\n            color.g = 0.2 + 0.2 * cos(iTime + uv.y * 10.0);\n            color.b = 0.4 + 0.2 * sin(iTime);\n\n            for (int i = 0; i < 10; i++) {\n                if (i < iClickCount) {\n                    float t = iTime - iClickTimes[i];\n                    float radius = t * 0.2;\n                    vec2 clickUV = iClickPositions[i] / iResolution.xy;\n                    float dist = distance(uv, clickUV);\n                    float ripple = 0.05 / (abs(dist - radius) + 0.01);\n                    color += vec3(ripple);\n                }\n            }\n\n            gl_FragColor = vec4(color, 1.0);\n        }\n    `;\n  _s(useEffect(_s(() => {\n    _s();\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n      console.error('WebGL not supported');\n      return;\n    }\n    const compileShader = (type, source) => {\n      const shader = gl.createShader(type);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.error('Shader compile error:', gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    };\n    const vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\n    const fragmentShader = compileShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      console.error('Program link error:', gl.getProgramInfoLog(program));\n      return;\n    }\n    gl.useProgram(program);\n    const positionLocation = gl.getAttribLocation(program, 'position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(positionLocation);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    const iTimeLoc = gl.getUniformLocation(program, 'iTime');\n    const iResolutionLoc = gl.getUniformLocation(program, 'iResolution');\n    const iClickPositionsLoc = gl.getUniformLocation(program, 'iClickPositions');\n    const iClickTimesLoc = gl.getUniformLocation(program, 'iClickTimes');\n    const iClickCountLoc = gl.getUniformLocation(program, 'iClickCount');\n    let clickPositions = Array(10).fill([0, 0]);\n    let clickTimes = Array(10).fill(0);\n    let clickCount = 0;\n    const handleClick = e => {\n      if (clickCount < 10) {\n        clickPositions[clickCount] = [e.clientX, canvas.height - e.clientY];\n        clickTimes[clickCount] = performance.now() / 1000;\n        clickCount++;\n      }\n    };\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    canvas.addEventListener('click', handleClick);\n    window.addEventListener('resize', handleResize);\n    const startTime = performance.now();\n    const render = () => {\n      const time = (performance.now() - startTime) / 1000;\n      gl.viewport(0, 0, canvas.width, canvas.height);\n      gl.uniform1f(iTimeLoc, time);\n      gl.uniform2f(iResolutionLoc, canvas.width, canvas.height);\n      gl.uniform1i(iClickCountLoc, clickCount);\n      const flatPositions = clickPositions.flat();\n      gl.uniform2fv(iClickPositionsLoc, flatPositions);\n      gl.uniform1fv(iClickTimesLoc, clickTimes);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n      requestAnimationFrame(render);\n    };\n    render();\n    return () => {\n      canvas.removeEventListener('click', handleClick);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n    return [gl.useProgram];\n  }), []), \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"hidden\",\n      backgroundColor: \"#000\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        display: \"block\",\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 1,\n        color: \"white\",\n        textAlign: \"center\",\n        paddingTop: \"30vh\",\n        userSelect: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"3rem\"\n        },\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        style: {\n          margin: \"15px\",\n          padding: \"12px 24px\",\n          fontSize: \"1.1rem\",\n          cursor: \"pointer\",\n          borderRadius: \"6px\",\n          border: \"none\",\n          backgroundColor: \"#4caf50\",\n          color: \"white\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/register\"),\n        style: {\n          margin: \"15px\",\n          padding: \"12px 24px\",\n          fontSize: \"1.1rem\",\n          cursor: \"pointer\",\n          borderRadius: \"6px\",\n          border: \"none\",\n          backgroundColor: \"#2196f3\",\n          color: \"white\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s2(MainPage, \"SgNw9vQDr9Jlb3AzoaG0yvcA5m0=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","MainPage","_s2","_s","$RefreshSig$","navigate","canvasRef","vertexShaderSource","fragmentShaderSource","canvas","current","width","window","innerWidth","height","innerHeight","gl","getContext","console","error","compileShader","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","positionLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","iTimeLoc","getUniformLocation","iResolutionLoc","iClickPositionsLoc","iClickTimesLoc","iClickCountLoc","clickPositions","Array","fill","clickTimes","clickCount","handleClick","e","clientX","clientY","performance","now","handleResize","addEventListener","startTime","render","time","viewport","uniform1f","uniform2f","uniform1i","flatPositions","flat","uniform2fv","uniform1fv","drawArrays","TRIANGLES","requestAnimationFrame","removeEventListener","style","position","overflow","backgroundColor","children","ref","top","left","display","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","color","textAlign","paddingTop","userSelect","fontSize","onClick","margin","padding","cursor","borderRadius","border","_c","$RefreshReg$"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/pages/MainPage.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst MainPage = () => {\n    const navigate = useNavigate();\n    const canvasRef = useRef(null);\n\n    const vertexShaderSource = `\n        attribute vec2 position;\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    `;\n\n    const fragmentShaderSource = `\n        precision mediump float;\n        uniform float iTime;\n        uniform vec2 iResolution;\n        uniform vec2 iClickPositions[10];\n        uniform float iClickTimes[10];\n        uniform int iClickCount;\n\n        void main() {\n            vec2 uv = gl_FragCoord.xy / iResolution.xy;\n            vec3 color = vec3(0.0);\n\n            color.r = 0.2 + 0.2 * sin(iTime + uv.x * 10.0);\n            color.g = 0.2 + 0.2 * cos(iTime + uv.y * 10.0);\n            color.b = 0.4 + 0.2 * sin(iTime);\n\n            for (int i = 0; i < 10; i++) {\n                if (i < iClickCount) {\n                    float t = iTime - iClickTimes[i];\n                    float radius = t * 0.2;\n                    vec2 clickUV = iClickPositions[i] / iResolution.xy;\n                    float dist = distance(uv, clickUV);\n                    float ripple = 0.05 / (abs(dist - radius) + 0.01);\n                    color += vec3(ripple);\n                }\n            }\n\n            gl_FragColor = vec4(color, 1.0);\n        }\n    `;\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        const gl = canvas.getContext('webgl');\n        if (!gl) {\n            console.error('WebGL not supported');\n            return;\n        }\n\n        const compileShader = (type, source) => {\n            const shader = gl.createShader(type);\n            gl.shaderSource(shader, source);\n            gl.compileShader(shader);\n            if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n                console.error('Shader compile error:', gl.getShaderInfoLog(shader));\n                gl.deleteShader(shader);\n                return null;\n            }\n            return shader;\n        };\n\n        const vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\n        const fragmentShader = compileShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n        const program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            console.error('Program link error:', gl.getProgramInfoLog(program));\n            return;\n        }\n        gl.useProgram(program);\n\n        const positionLocation = gl.getAttribLocation(program, 'position');\n        const positionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n        gl.bufferData(\n            gl.ARRAY_BUFFER,\n            new Float32Array([-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1]),\n            gl.STATIC_DRAW\n        );\n        gl.enableVertexAttribArray(positionLocation);\n        gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n        const iTimeLoc = gl.getUniformLocation(program, 'iTime');\n        const iResolutionLoc = gl.getUniformLocation(program, 'iResolution');\n        const iClickPositionsLoc = gl.getUniformLocation(program, 'iClickPositions');\n        const iClickTimesLoc = gl.getUniformLocation(program, 'iClickTimes');\n        const iClickCountLoc = gl.getUniformLocation(program, 'iClickCount');\n\n        let clickPositions = Array(10).fill([0, 0]);\n        let clickTimes = Array(10).fill(0);\n        let clickCount = 0;\n\n        const handleClick = (e) => {\n            if (clickCount < 10) {\n                clickPositions[clickCount] = [e.clientX, canvas.height - e.clientY];\n                clickTimes[clickCount] = performance.now() / 1000;\n                clickCount++;\n            }\n        };\n\n        const handleResize = () => {\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n        };\n\n        canvas.addEventListener('click', handleClick);\n        window.addEventListener('resize', handleResize);\n\n        const startTime = performance.now();\n\n        const render = () => {\n            const time = (performance.now() - startTime) / 1000;\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n\n            gl.uniform1f(iTimeLoc, time);\n            gl.uniform2f(iResolutionLoc, canvas.width, canvas.height);\n            gl.uniform1i(iClickCountLoc, clickCount);\n\n            const flatPositions = clickPositions.flat();\n            gl.uniform2fv(iClickPositionsLoc, flatPositions);\n            gl.uniform1fv(iClickTimesLoc, clickTimes);\n\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n            requestAnimationFrame(render);\n        };\n\n        render();\n\n        return () => {\n            canvas.removeEventListener('click', handleClick);\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n        <div\n            style={{ position: \"relative\", width: \"100%\", height: \"100vh\", overflow: \"hidden\", backgroundColor: \"#000\" }}\n        >\n            <canvas\n                ref={canvasRef}\n                width={window.innerWidth}\n                height={window.innerHeight}\n                style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", display: \"block\", zIndex: 0 }}\n            />\n            <div\n                style={{ position: \"relative\", zIndex: 1, color: \"white\", textAlign: \"center\", paddingTop: \"30vh\", userSelect: \"none\" }}\n            >\n                <h2 style={{ fontSize: \"3rem\" }}>Welcome</h2>\n                <button\n                    onClick={() => navigate(\"/login\")}\n                    style={{ margin: \"15px\", padding: \"12px 24px\", fontSize: \"1.1rem\", cursor: \"pointer\", borderRadius: \"6px\", border: \"none\", backgroundColor: \"#4caf50\", color: \"white\" }}\n                >\n                    Login\n                </button>\n                <button\n                    onClick={() => navigate(\"/register\")}\n                    style={{ margin: \"15px\", padding: \"12px 24px\", fontSize: \"1.1rem\", cursor: \"pointer\", borderRadius: \"6px\", border: \"none\", backgroundColor: \"#2196f3\", color: \"white\" }}\n                >\n                    Register\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}