{"ast":null,"code":"var _jsxFileName = \"/Users/parhamgolmohammadi/Sales/frontend/src/pages/MainPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const Navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const canvasRef = useRef(null);\n\n  // Vertex shader source\n  const vertexShaderSource = `\n    attribute vec2 position;\n    void main() {\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  `;\n\n  // Fragment shader source (replace with your design!)\n  const fragmentShaderSource = `\n    precision mediump float;\n    uniform float iTime;\n    uniform vec2 iResolution;\n    uniform vec2 iClickPositions[10];\n    uniform float iClickTimes[10];\n    uniform int iClickCount;\n\n    void main() {\n      vec2 uv = gl_FragCoord.xy / iResolution.xy;\n      vec3 color = vec3(0.0);\n\n      // Animate background\n      color.r = 0.2 + 0.2 * sin(iTime + uv.x * 10.0);\n      color.g = 0.2 + 0.2 * cos(iTime + uv.y * 10.0);\n      color.b = 0.4 + 0.2 * sin(iTime);\n\n      // Ripples for each click\n      for (int i = 0; i < 10; i++) {\n        if (i < iClickCount) {\n          float t = iTime - iClickTimes[i];\n          float radius = t * 0.2; // speed of ripple\n          vec2 clickUV = iClickPositions[i] / iResolution.xy;\n          float dist = distance(uv, clickUV);\n          float ripple = 0.05 / (abs(dist - radius) + 0.01);\n          color += vec3(ripple);\n        }\n      }\n\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n  _s(useEffect(_s(() => {\n    _s();\n    const canvas = canvasRef.current;\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n      console.error('WebGL not supported');\n      return;\n    }\n\n    // Compile shaders\n    const compileShader = (type, source) => {\n      const shader = gl.createShader(type);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.error('Shader compile error:', gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    };\n    const vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\n    const fragmentShader = compileShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    // Link program\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      console.error('Program link error:', gl.getProgramInfoLog(program));\n      return;\n    }\n    gl.useProgram(program);\n\n    // Attributes and buffers\n    const positionLocation = gl.getAttribLocation(program, 'position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(positionLocation);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // Uniforms\n    const iTimeLoc = gl.getUniformLocation(program, 'iTime');\n    const iResolutionLoc = gl.getUniformLocation(program, 'iResolution');\n    const iClickPositionsLoc = gl.getUniformLocation(program, 'iClickPositions');\n    const iClickTimesLoc = gl.getUniformLocation(program, 'iClickTimes');\n    const iClickCountLoc = gl.getUniformLocation(program, 'iClickCount');\n\n    // Click state\n    let clickPositions = Array(10).fill([0, 0]);\n    let clickTimes = Array(10).fill(0);\n    let clickCount = 0;\n    const handleClick = e => {\n      if (clickCount < 10) {\n        clickPositions[clickCount] = [e.clientX, canvas.height - e.clientY];\n        clickTimes[clickCount] = performance.now() / 1000;\n        clickCount++;\n      }\n    };\n    canvas.addEventListener('click', handleClick);\n    const startTime = performance.now();\n    const render = () => {\n      const time = (performance.now() - startTime) / 1000;\n      gl.viewport(0, 0, canvas.width, canvas.height);\n      gl.uniform1f(iTimeLoc, time);\n      gl.uniform2f(iResolutionLoc, canvas.width, canvas.height);\n      gl.uniform1i(iClickCountLoc, clickCount);\n      const flatPositions = clickPositions.flat();\n      gl.uniform2fv(iClickPositionsLoc, flatPositions);\n      gl.uniform1fv(iClickTimesLoc, clickTimes);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n      requestAnimationFrame(render);\n    };\n    render();\n    return () => {\n      canvas.removeEventListener('click', handleClick);\n    };\n  }, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n    return [gl.useProgram];\n  }), []), \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"hidden\",\n      backgroundColor: \"#000\" // fallback background\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"canvas-container\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        display: \"block\",\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 1,\n        color: \"white\",\n        textAlign: \"center\",\n        paddingTop: \"30vh\",\n        userSelect: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-title\",\n        id: \"mainTitle\",\n        style: {\n          fontSize: \"3rem\"\n        },\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn login-btn\",\n        id: \"loginButton\",\n        onClick: () => navigate(\"/login\"),\n        style: {\n          margin: \"15px\",\n          padding: \"12px 24px\",\n          fontSize: \"1.1rem\",\n          cursor: \"pointer\",\n          borderRadius: \"6px\",\n          border: \"none\",\n          backgroundColor: \"#4caf50\",\n          color: \"white\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-btn register-btn\",\n        id: \"registerButton\",\n        onClick: () => navigate(\"/register\"),\n        style: {\n          margin: \"15px\",\n          padding: \"12px 24px\",\n          fontSize: \"1.1rem\",\n          cursor: \"pointer\",\n          borderRadius: \"6px\",\n          border: \"none\",\n          backgroundColor: \"#2196f3\",\n          color: \"white\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_s2(MainPage, \"DXJg6pJxaBb+QGliz8ADXI0+iAw=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","THREE","jsxDEV","_jsxDEV","MainPage","_s2","_s","$RefreshSig$","Navigate","loading","setLoading","canvasRef","vertexShaderSource","fragmentShaderSource","canvas","current","gl","getContext","console","error","compileShader","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","positionLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","iTimeLoc","getUniformLocation","iResolutionLoc","iClickPositionsLoc","iClickTimesLoc","iClickCountLoc","clickPositions","Array","fill","clickTimes","clickCount","handleClick","e","clientX","height","clientY","performance","now","addEventListener","startTime","render","time","viewport","width","uniform1f","uniform2f","uniform1i","flatPositions","flat","uniform2fv","uniform1fv","drawArrays","TRIANGLES","requestAnimationFrame","removeEventListener","className","style","position","overflow","backgroundColor","children","ref","top","left","display","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","color","textAlign","paddingTop","userSelect","id","fontSize","onClick","navigate","margin","padding","cursor","borderRadius","border","_c","$RefreshReg$"],"sources":["/Users/parhamgolmohammadi/Sales/frontend/src/pages/MainPage.js"],"sourcesContent":["import React, {useRef, useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as THREE from \"three\";\n\nconst MainPage = () => {\n        const Navigate = useNavigate();\n        const [loading, setLoading] = useState(true);\n        \n        const canvasRef = useRef(null);\n\n        // Vertex shader source\n        const vertexShaderSource = `\n    attribute vec2 position;\n    void main() {\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  `;\n\n        // Fragment shader source (replace with your design!)\n        const fragmentShaderSource = `\n    precision mediump float;\n    uniform float iTime;\n    uniform vec2 iResolution;\n    uniform vec2 iClickPositions[10];\n    uniform float iClickTimes[10];\n    uniform int iClickCount;\n\n    void main() {\n      vec2 uv = gl_FragCoord.xy / iResolution.xy;\n      vec3 color = vec3(0.0);\n\n      // Animate background\n      color.r = 0.2 + 0.2 * sin(iTime + uv.x * 10.0);\n      color.g = 0.2 + 0.2 * cos(iTime + uv.y * 10.0);\n      color.b = 0.4 + 0.2 * sin(iTime);\n\n      // Ripples for each click\n      for (int i = 0; i < 10; i++) {\n        if (i < iClickCount) {\n          float t = iTime - iClickTimes[i];\n          float radius = t * 0.2; // speed of ripple\n          vec2 clickUV = iClickPositions[i] / iResolution.xy;\n          float dist = distance(uv, clickUV);\n          float ripple = 0.05 / (abs(dist - radius) + 0.01);\n          color += vec3(ripple);\n        }\n      }\n\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n\n        useEffect(() => {\n            const canvas = canvasRef.current;\n            const gl = canvas.getContext('webgl');\n            if (!gl) {\n                console.error('WebGL not supported');\n                return;\n            }\n\n            // Compile shaders\n            const compileShader = (type, source) => {\n                const shader = gl.createShader(type);\n                gl.shaderSource(shader, source);\n                gl.compileShader(shader);\n                if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n                    console.error('Shader compile error:', gl.getShaderInfoLog(shader));\n                    gl.deleteShader(shader);\n                    return null;\n                }\n                return shader;\n            };\n\n            const vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\n            const fragmentShader = compileShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n            // Link program\n            const program = gl.createProgram();\n            gl.attachShader(program, vertexShader);\n            gl.attachShader(program, fragmentShader);\n            gl.linkProgram(program);\n            if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n                console.error('Program link error:', gl.getProgramInfoLog(program));\n                return;\n            }\n            gl.useProgram(program);\n\n            // Attributes and buffers\n            const positionLocation = gl.getAttribLocation(program, 'position');\n            const positionBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n            gl.bufferData(\n                gl.ARRAY_BUFFER,\n                new Float32Array([\n                    -1, -1,   1, -1,  -1, 1,\n                    1, -1,   1,  1,  -1, 1,\n                ]),\n                gl.STATIC_DRAW\n            );\n            gl.enableVertexAttribArray(positionLocation);\n            gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n            // Uniforms\n            const iTimeLoc = gl.getUniformLocation(program, 'iTime');\n            const iResolutionLoc = gl.getUniformLocation(program, 'iResolution');\n            const iClickPositionsLoc = gl.getUniformLocation(program, 'iClickPositions');\n            const iClickTimesLoc = gl.getUniformLocation(program, 'iClickTimes');\n            const iClickCountLoc = gl.getUniformLocation(program, 'iClickCount');\n\n            // Click state\n            let clickPositions = Array(10).fill([0, 0]);\n            let clickTimes = Array(10).fill(0);\n            let clickCount = 0;\n\n            const handleClick = (e) => {\n                if (clickCount < 10) {\n                    clickPositions[clickCount] = [e.clientX, canvas.height - e.clientY];\n                    clickTimes[clickCount] = performance.now() / 1000;\n                    clickCount++;\n                }\n            };\n\n            canvas.addEventListener('click', handleClick);\n\n            const startTime = performance.now();\n\n            const render = () => {\n                const time = (performance.now() - startTime) / 1000;\n\n                gl.viewport(0, 0, canvas.width, canvas.height);\n\n                gl.uniform1f(iTimeLoc, time);\n                gl.uniform2f(iResolutionLoc, canvas.width, canvas.height);\n                gl.uniform1i(iClickCountLoc, clickCount);\n\n                const flatPositions = clickPositions.flat();\n                gl.uniform2fv(iClickPositionsLoc, flatPositions);\n                gl.uniform1fv(iClickTimesLoc, clickTimes);\n\n                gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n                requestAnimationFrame(render);\n            };\n\n            render();\n\n            return () => {\n                canvas.removeEventListener('click', handleClick);\n            };\n        }, []);\n\n    return (\n        <div\n            className=\"main-container\"\n            style={{\n                position: \"relative\",\n                width: \"100%\",\n                height: \"100vh\",\n                overflow: \"hidden\",\n                backgroundColor: \"#000\", // fallback background\n            }}\n        >\n            <canvas\n                ref={canvasRef}\n                className=\"canvas-container\"\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"block\",\n                    zIndex: 0,\n                }}\n            />\n            <div\n                style={{\n                    position: \"relative\",\n                    zIndex: 1,\n                    color: \"white\",\n                    textAlign: \"center\",\n                    paddingTop: \"30vh\",\n                    userSelect: \"none\",\n                }}\n            >\n                <h2 className=\"main-title\" id=\"mainTitle\" style={{ fontSize: \"3rem\" }}>\n                    Welcome\n                </h2>\n                <button\n                    className=\"main-btn login-btn\"\n                    id=\"loginButton\"\n                    onClick={() => navigate(\"/login\")}\n                    style={{\n                        margin: \"15px\",\n                        padding: \"12px 24px\",\n                        fontSize: \"1.1rem\",\n                        cursor: \"pointer\",\n                        borderRadius: \"6px\",\n                        border: \"none\",\n                        backgroundColor: \"#4caf50\",\n                        color: \"white\",\n                    }}\n                >\n                    Login\n                </button>\n                <button\n                    className=\"main-btn register-btn\"\n                    id=\"registerButton\"\n                    onClick={() => navigate(\"/register\")}\n                    style={{\n                        margin: \"15px\",\n                        padding: \"12px 24px\",\n                        fontSize: \"1.1rem\",\n                        cursor: \"pointer\",\n                        borderRadius: \"6px\",\n                        border: \"none\",\n                        backgroundColor: \"#2196f3\",\n                        color: \"white\",\n                    }}\n                >\n                    Register\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}