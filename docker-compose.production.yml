services:
  db:
    environment:
      POSTGRES_DB: ${PROD_DB_NAME:-salesDb}
      POSTGRES_USER: ${PROD_DB_USER:-salesuser}
      POSTGRES_PASSWORD: ${PROD_DB_PASSWORD}
    volumes:
      - postgres_production_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_production_data:/data
    restart: unless-stopped
    networks:
      - backend

  backend:
    environment:
      - DEBUG=False
      - SECRET_KEY=${PROD_SECRET_KEY}
      - DATABASE_HOST=db
      - DATABASE_NAME=${PROD_DB_NAME:-salesDb}
      - DATABASE_USER=${PROD_DB_USER:-salesuser}
      - DATABASE_PASSWORD=${PROD_DB_PASSWORD}
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - KAVENEGAR_API_KEY=${KAVENEGAR_API_KEY}
      - CORS_ALLOWED_ORIGINS=https://gtc.market,https://www.gtc.market,http://gtc.market,http://www.gtc.market
      - CSRF_TRUSTED_ORIGINS=https://gtc.market,https://www.gtc.market,http://gtc.market,http://www.gtc.market
      - ALLOWED_HOSTS=gtc.market,www.gtc.market
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis

  frontend:
    ports:
      - "80:80"
      - "443:443"

volumes:
  postgres_production_data:
  redis_production_data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
